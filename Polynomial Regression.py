{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyOZZviIyyvI1PUmegOivANv"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"resources":{"http://localhost:8080/nbextensions/google.colab/files.js":{"data":"Ly8gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIExMQwovLwovLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsKLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLgovLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKLy8KLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKLy8KLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQovLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLAovLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4KLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZAovLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4KCi8qKgogKiBAZmlsZW92ZXJ2aWV3IEhlbHBlcnMgZm9yIGdvb2dsZS5jb2xhYiBQeXRob24gbW9kdWxlLgogKi8KKGZ1bmN0aW9uKHNjb3BlKSB7CmZ1bmN0aW9uIHNwYW4odGV4dCwgc3R5bGVBdHRyaWJ1dGVzID0ge30pIHsKICBjb25zdCBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpOwogIGVsZW1lbnQudGV4dENvbnRlbnQgPSB0ZXh0OwogIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKHN0eWxlQXR0cmlidXRlcykpIHsKICAgIGVsZW1lbnQuc3R5bGVba2V5XSA9IHN0eWxlQXR0cmlidXRlc1trZXldOwogIH0KICByZXR1cm4gZWxlbWVudDsKfQoKLy8gTWF4IG51bWJlciBvZiBieXRlcyB3aGljaCB3aWxsIGJlIHVwbG9hZGVkIGF0IGEgdGltZS4KY29uc3QgTUFYX1BBWUxPQURfU0laRSA9IDEwMCAqIDEwMjQ7CgpmdW5jdGlvbiBfdXBsb2FkRmlsZXMoaW5wdXRJZCwgb3V0cHV0SWQpIHsKICBjb25zdCBzdGVwcyA9IHVwbG9hZEZpbGVzU3RlcChpbnB1dElkLCBvdXRwdXRJZCk7CiAgY29uc3Qgb3V0cHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG91dHB1dElkKTsKICAvLyBDYWNoZSBzdGVwcyBvbiB0aGUgb3V0cHV0RWxlbWVudCB0byBtYWtlIGl0IGF2YWlsYWJsZSBmb3IgdGhlIG5leHQgY2FsbAogIC8vIHRvIHVwbG9hZEZpbGVzQ29udGludWUgZnJvbSBQeXRob24uCiAgb3V0cHV0RWxlbWVudC5zdGVwcyA9IHN0ZXBzOwoKICByZXR1cm4gX3VwbG9hZEZpbGVzQ29udGludWUob3V0cHV0SWQpOwp9CgovLyBUaGlzIGlzIHJvdWdobHkgYW4gYXN5bmMgZ2VuZXJhdG9yIChub3Qgc3VwcG9ydGVkIGluIHRoZSBicm93c2VyIHlldCksCi8vIHdoZXJlIHRoZXJlIGFyZSBtdWx0aXBsZSBhc3luY2hyb25vdXMgc3RlcHMgYW5kIHRoZSBQeXRob24gc2lkZSBpcyBnb2luZwovLyB0byBwb2xsIGZvciBjb21wbGV0aW9uIG9mIGVhY2ggc3RlcC4KLy8gVGhpcyB1c2VzIGEgUHJvbWlzZSB0byBibG9jayB0aGUgcHl0aG9uIHNpZGUgb24gY29tcGxldGlvbiBvZiBlYWNoIHN0ZXAsCi8vIHRoZW4gcGFzc2VzIHRoZSByZXN1bHQgb2YgdGhlIHByZXZpb3VzIHN0ZXAgYXMgdGhlIGlucHV0IHRvIHRoZSBuZXh0IHN0ZXAuCmZ1bmN0aW9uIF91cGxvYWRGaWxlc0NvbnRpbnVlKG91dHB1dElkKSB7CiAgY29uc3Qgb3V0cHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG91dHB1dElkKTsKICBjb25zdCBzdGVwcyA9IG91dHB1dEVsZW1lbnQuc3RlcHM7CgogIGNvbnN0IG5leHQgPSBzdGVwcy5uZXh0KG91dHB1dEVsZW1lbnQubGFzdFByb21pc2VWYWx1ZSk7CiAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShuZXh0LnZhbHVlLnByb21pc2UpLnRoZW4oKHZhbHVlKSA9PiB7CiAgICAvLyBDYWNoZSB0aGUgbGFzdCBwcm9taXNlIHZhbHVlIHRvIG1ha2UgaXQgYXZhaWxhYmxlIHRvIHRoZSBuZXh0CiAgICAvLyBzdGVwIG9mIHRoZSBnZW5lcmF0b3IuCiAgICBvdXRwdXRFbGVtZW50Lmxhc3RQcm9taXNlVmFsdWUgPSB2YWx1ZTsKICAgIHJldHVybiBuZXh0LnZhbHVlLnJlc3BvbnNlOwogIH0pOwp9CgovKioKICogR2VuZXJhdG9yIGZ1bmN0aW9uIHdoaWNoIGlzIGNhbGxlZCBiZXR3ZWVuIGVhY2ggYXN5bmMgc3RlcCBvZiB0aGUgdXBsb2FkCiAqIHByb2Nlc3MuCiAqIEBwYXJhbSB7c3RyaW5nfSBpbnB1dElkIEVsZW1lbnQgSUQgb2YgdGhlIGlucHV0IGZpbGUgcGlja2VyIGVsZW1lbnQuCiAqIEBwYXJhbSB7c3RyaW5nfSBvdXRwdXRJZCBFbGVtZW50IElEIG9mIHRoZSBvdXRwdXQgZGlzcGxheS4KICogQHJldHVybiB7IUl0ZXJhYmxlPCFPYmplY3Q+fSBJdGVyYWJsZSBvZiBuZXh0IHN0ZXBzLgogKi8KZnVuY3Rpb24qIHVwbG9hZEZpbGVzU3RlcChpbnB1dElkLCBvdXRwdXRJZCkgewogIGNvbnN0IGlucHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlucHV0SWQpOwogIGlucHV0RWxlbWVudC5kaXNhYmxlZCA9IGZhbHNlOwoKICBjb25zdCBvdXRwdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQob3V0cHV0SWQpOwogIG91dHB1dEVsZW1lbnQuaW5uZXJIVE1MID0gJyc7CgogIGNvbnN0IHBpY2tlZFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgaW5wdXRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIChlKSA9PiB7CiAgICAgIHJlc29sdmUoZS50YXJnZXQuZmlsZXMpOwogICAgfSk7CiAgfSk7CgogIGNvbnN0IGNhbmNlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpOwogIGlucHV0RWxlbWVudC5wYXJlbnRFbGVtZW50LmFwcGVuZENoaWxkKGNhbmNlbCk7CiAgY2FuY2VsLnRleHRDb250ZW50ID0gJ0NhbmNlbCB1cGxvYWQnOwogIGNvbnN0IGNhbmNlbFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgY2FuY2VsLm9uY2xpY2sgPSAoKSA9PiB7CiAgICAgIHJlc29sdmUobnVsbCk7CiAgICB9OwogIH0pOwoKICAvLyBXYWl0IGZvciB0aGUgdXNlciB0byBwaWNrIHRoZSBmaWxlcy4KICBjb25zdCBmaWxlcyA9IHlpZWxkIHsKICAgIHByb21pc2U6IFByb21pc2UucmFjZShbcGlja2VkUHJvbWlzZSwgY2FuY2VsUHJvbWlzZV0pLAogICAgcmVzcG9uc2U6IHsKICAgICAgYWN0aW9uOiAnc3RhcnRpbmcnLAogICAgfQogIH07CgogIGNhbmNlbC5yZW1vdmUoKTsKCiAgLy8gRGlzYWJsZSB0aGUgaW5wdXQgZWxlbWVudCBzaW5jZSBmdXJ0aGVyIHBpY2tzIGFyZSBub3QgYWxsb3dlZC4KICBpbnB1dEVsZW1lbnQuZGlzYWJsZWQgPSB0cnVlOwoKICBpZiAoIWZpbGVzKSB7CiAgICByZXR1cm4gewogICAgICByZXNwb25zZTogewogICAgICAgIGFjdGlvbjogJ2NvbXBsZXRlJywKICAgICAgfQogICAgfTsKICB9CgogIGZvciAoY29uc3QgZmlsZSBvZiBmaWxlcykgewogICAgY29uc3QgbGkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpOwogICAgbGkuYXBwZW5kKHNwYW4oZmlsZS5uYW1lLCB7Zm9udFdlaWdodDogJ2JvbGQnfSkpOwogICAgbGkuYXBwZW5kKHNwYW4oCiAgICAgICAgYCgke2ZpbGUudHlwZSB8fCAnbi9hJ30pIC0gJHtmaWxlLnNpemV9IGJ5dGVzLCBgICsKICAgICAgICBgbGFzdCBtb2RpZmllZDogJHsKICAgICAgICAgICAgZmlsZS5sYXN0TW9kaWZpZWREYXRlID8gZmlsZS5sYXN0TW9kaWZpZWREYXRlLnRvTG9jYWxlRGF0ZVN0cmluZygpIDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ24vYSd9IC0gYCkpOwogICAgY29uc3QgcGVyY2VudCA9IHNwYW4oJzAlIGRvbmUnKTsKICAgIGxpLmFwcGVuZENoaWxkKHBlcmNlbnQpOwoKICAgIG91dHB1dEVsZW1lbnQuYXBwZW5kQ2hpbGQobGkpOwoKICAgIGNvbnN0IGZpbGVEYXRhUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7CiAgICAgIGNvbnN0IHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7CiAgICAgIHJlYWRlci5vbmxvYWQgPSAoZSkgPT4gewogICAgICAgIHJlc29sdmUoZS50YXJnZXQucmVzdWx0KTsKICAgICAgfTsKICAgICAgcmVhZGVyLnJlYWRBc0FycmF5QnVmZmVyKGZpbGUpOwogICAgfSk7CiAgICAvLyBXYWl0IGZvciB0aGUgZGF0YSB0byBiZSByZWFkeS4KICAgIGxldCBmaWxlRGF0YSA9IHlpZWxkIHsKICAgICAgcHJvbWlzZTogZmlsZURhdGFQcm9taXNlLAogICAgICByZXNwb25zZTogewogICAgICAgIGFjdGlvbjogJ2NvbnRpbnVlJywKICAgICAgfQogICAgfTsKCiAgICAvLyBVc2UgYSBjaHVua2VkIHNlbmRpbmcgdG8gYXZvaWQgbWVzc2FnZSBzaXplIGxpbWl0cy4gU2VlIGIvNjIxMTU2NjAuCiAgICBsZXQgcG9zaXRpb24gPSAwOwogICAgZG8gewogICAgICBjb25zdCBsZW5ndGggPSBNYXRoLm1pbihmaWxlRGF0YS5ieXRlTGVuZ3RoIC0gcG9zaXRpb24sIE1BWF9QQVlMT0FEX1NJWkUpOwogICAgICBjb25zdCBjaHVuayA9IG5ldyBVaW50OEFycmF5KGZpbGVEYXRhLCBwb3NpdGlvbiwgbGVuZ3RoKTsKICAgICAgcG9zaXRpb24gKz0gbGVuZ3RoOwoKICAgICAgY29uc3QgYmFzZTY0ID0gYnRvYShTdHJpbmcuZnJvbUNoYXJDb2RlLmFwcGx5KG51bGwsIGNodW5rKSk7CiAgICAgIHlpZWxkIHsKICAgICAgICByZXNwb25zZTogewogICAgICAgICAgYWN0aW9uOiAnYXBwZW5kJywKICAgICAgICAgIGZpbGU6IGZpbGUubmFtZSwKICAgICAgICAgIGRhdGE6IGJhc2U2NCwKICAgICAgICB9LAogICAgICB9OwoKICAgICAgbGV0IHBlcmNlbnREb25lID0gZmlsZURhdGEuYnl0ZUxlbmd0aCA9PT0gMCA/CiAgICAgICAgICAxMDAgOgogICAgICAgICAgTWF0aC5yb3VuZCgocG9zaXRpb24gLyBmaWxlRGF0YS5ieXRlTGVuZ3RoKSAqIDEwMCk7CiAgICAgIHBlcmNlbnQudGV4dENvbnRlbnQgPSBgJHtwZXJjZW50RG9uZX0lIGRvbmVgOwoKICAgIH0gd2hpbGUgKHBvc2l0aW9uIDwgZmlsZURhdGEuYnl0ZUxlbmd0aCk7CiAgfQoKICAvLyBBbGwgZG9uZS4KICB5aWVsZCB7CiAgICByZXNwb25zZTogewogICAgICBhY3Rpb246ICdjb21wbGV0ZScsCiAgICB9CiAgfTsKfQoKc2NvcGUuZ29vZ2xlID0gc2NvcGUuZ29vZ2xlIHx8IHt9OwpzY29wZS5nb29nbGUuY29sYWIgPSBzY29wZS5nb29nbGUuY29sYWIgfHwge307CnNjb3BlLmdvb2dsZS5jb2xhYi5fZmlsZXMgPSB7CiAgX3VwbG9hZEZpbGVzLAogIF91cGxvYWRGaWxlc0NvbnRpbnVlLAp9Owp9KShzZWxmKTsK","ok":true,"headers":[["content-type","application/javascript"]],"status":200,"status_text":""}},"base_uri":"https://localhost:8080/","height":280},"id":"rxNXNPuD6Bvi","executionInfo":{"status":"ok","timestamp":1662828641922,"user_tz":-330,"elapsed":24801,"user":{"displayName":"Bhawna Bhoria (M22MA003)","userId":"18048709692470503716"}},"outputId":"62369d81-9d1b-4616-ba3c-9fa54148237f"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","     <input type=\"file\" id=\"files-50be75b2-691a-4ad3-8d5a-7b87a41f91e0\" name=\"files[]\" multiple disabled\n","        style=\"border:none\" />\n","     <output id=\"result-50be75b2-691a-4ad3-8d5a-7b87a41f91e0\">\n","      Upload widget is only available when the cell has been executed in the\n","      current browser session. Please rerun this cell to enable.\n","      </output>\n","      <script src=\"/nbextensions/google.colab/files.js\"></script> "]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Saving Ques_3.csv to Ques_3.csv\n","(32, 3)\n"]},{"output_type":"execute_result","data":{"text/plain":["   Unnamed: 0          x             y\n","0           0   34.33159  6.504940e+04\n","1           1   26.94935  3.238074e+04\n","2           2  111.47824  2.061468e+06\n","3           3   51.18001  2.079118e+05\n","4           4    7.95172  1.083245e+03"],"text/html":["\n","  <div id=\"df-b22752e6-1c23-4e39-a2ea-48fdd03dfd09\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>x</th>\n","      <th>y</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>34.33159</td>\n","      <td>6.504940e+04</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>26.94935</td>\n","      <td>3.238074e+04</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>111.47824</td>\n","      <td>2.061468e+06</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>51.18001</td>\n","      <td>2.079118e+05</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>7.95172</td>\n","      <td>1.083245e+03</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b22752e6-1c23-4e39-a2ea-48fdd03dfd09')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-b22752e6-1c23-4e39-a2ea-48fdd03dfd09 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-b22752e6-1c23-4e39-a2ea-48fdd03dfd09');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":1}],"source":["%matplotlib inline\n","import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","from google.colab import files\n","uploaded = files.upload()\n","import io\n","\n","\n","plt.rcParams['figure.figsize']=(10.0,5.0)\n","data = pd.read_csv(io.BytesIO(uploaded['Ques_3.csv']))\n","print(data.shape)\n","data.head()\n"]},{"cell_type":"code","source":["\n","\n","X = data['x'].values\n","Y = data['y'].values\n","mean_x = np.mean(X)\n","mean_y = np.mean(Y)\n","\n","n = len(X)\n","print(\"value of n is\",n)\n","print(mean_x)\n","print(\"mean of y is\",mean_y)\n","\n","numer = 0\n","denom = 0\n","for i in range(n):\n","    numer += (X[i]-mean_x)*(Y[i]-mean_y)\n","    denom += (X[i]-mean_x)**2\n","b1 = numer/denom\n","b0 = mean_y - (b1*mean_x)\n","print(\"Value of m and c in equation y=mx+c are\")\n","print(b1,b0)\n","\n","max_x = np.max(X)\n","\n","x=X\n","y_pred = b0 + b1*x\n","plt.plot(x,y_pred, color='#58b970', label='Regression Line',marker='|')\n","\n","plt.scatter(X,Y,c='#ef5423', label='Scatter Plot')\n","\n","plt.xlabel('engine_size')\n","plt.ylabel('price')\n","plt.legend()\n","plt.show() \n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":433},"id":"yKAF0iPG66Z1","executionInfo":{"status":"ok","timestamp":1662828646174,"user_tz":-330,"elapsed":582,"user":{"displayName":"Bhawna Bhoria (M22MA003)","userId":"18048709692470503716"}},"outputId":"0047acad-2785-4a4f-c04b-cb4acf023c6a"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["value of n is 32\n","72.79141625\n","mean of y is 1040082.8334753733\n","Value of m and c in equation y=mx+c are\n","23794.938432413885 -691984.4346015881\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 720x360 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["#Linear Regression R2 value\n","n=len(Y)\n","#print(n)\n","numer=0\n","denom=0\n","for i in range(n):\n","   numer+=((Y[i]-y_pred[i])**2)\n","   denom+=((Y[i]-mean_y)**2)\n","  # print(numer,denom)\n","k=1-(numer/denom)\n","print ('R2 value is',k)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rhmaVfkv8yFl","executionInfo":{"status":"ok","timestamp":1662828695853,"user_tz":-330,"elapsed":741,"user":{"displayName":"Bhawna Bhoria (M22MA003)","userId":"18048709692470503716"}},"outputId":"7e6f72e9-2997-4bc7-f028-1abe42cba7a2"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["R2 value is 0.8637829407949423\n"]}]},{"cell_type":"code","source":["\n","X = data.iloc[:, 1:2].values\n","y_pred = data.iloc[:, 2].values\n","# Test dataset and Training dataset\n","from sklearn.model_selection import train_test_split \n","X_train, X_test, y_train, y_test = train_test_split(X, y_pred, test_size=0.2, random_state=0)\n","from sklearn.preprocessing import PolynomialFeatures\n","from sklearn.linear_model import LinearRegression\n","poly_reg = PolynomialFeatures(degree=2)\n","X_poly = poly_reg.fit_transform(X)\n","pol_reg = LinearRegression()\n","pol_reg.fit(X_poly, y_pred)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8bXlGOcM7JD3","executionInfo":{"status":"ok","timestamp":1662828699845,"user_tz":-330,"elapsed":454,"user":{"displayName":"Bhawna Bhoria (M22MA003)","userId":"18048709692470503716"}},"outputId":"48c82f8e-5388-4467-c122-13853d275600"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LinearRegression()"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["#Polynomial Regression with degree 2\n","#Orange - Actual Data\n","#Green - Polynomial Regression Results\n","plt.scatter(X, y_pred, color='#ef5423')\n","plt.scatter(X, pol_reg.predict(poly_reg.fit_transform(X)), color='#58b970')\n","print(\"Polynomial Regression with degree 2\")\n","plt.xlabel('X')\n","plt.ylabel('Y')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":362},"id":"9QjH-e357NIH","executionInfo":{"status":"ok","timestamp":1662828703794,"user_tz":-330,"elapsed":1169,"user":{"displayName":"Bhawna Bhoria (M22MA003)","userId":"18048709692470503716"}},"outputId":"25c564e6-dafb-40b6-bef7-8f2de4024695"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["Polynomial Regression with degree 2\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 720x360 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["\n","from sklearn.preprocessing import PolynomialFeatures\n","from sklearn.linear_model import LinearRegression\n","poly_reg = PolynomialFeatures(degree=3)\n","X_poly = poly_reg.fit_transform(X)\n","pol_reg = LinearRegression()\n","pol_reg.fit(X_poly, y_pred)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4w1cU2Mk7N-C","executionInfo":{"status":"ok","timestamp":1662811226063,"user_tz":-330,"elapsed":771,"user":{"displayName":"Bhawna Bhoria (M22MA003)","userId":"18048709692470503716"}},"outputId":"1ac4a22f-c5cb-4317-aff0-416f859c6706"},"execution_count":31,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LinearRegression()"]},"metadata":{},"execution_count":31}]},{"cell_type":"code","source":["#Polynomial Regression with degree 3\n","#Orange - Actual Data\n","#Green - Polynomial Regression Results\n","plt.scatter(X, y_pred, color='#ef5423')\n","plt.scatter(X, pol_reg.predict(poly_reg.fit_transform(X)), color='#58b970')\n","print(\"Polynomial Regression with degree 3\")\n","plt.xlabel('X')\n","plt.ylabel('Y')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":362},"id":"O0YbGFtaRDsU","executionInfo":{"status":"ok","timestamp":1662828736647,"user_tz":-330,"elapsed":504,"user":{"displayName":"Bhawna Bhoria (M22MA003)","userId":"18048709692470503716"}},"outputId":"ec522bc0-a890-4ac6-f41f-b68334a42fca"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["Polynomial Regression with degree 3\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 720x360 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]}]}