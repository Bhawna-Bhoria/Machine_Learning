{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyMZkaIlBUggPfsgJ/8tQuXx"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["%matplotlib inline\n","import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","from google.colab import files\n","uploaded = files.upload()\n","import io\n","\n","\n","plt.rcParams['figure.figsize']=(10.0,5.0)\n","data = pd.read_csv(io.BytesIO(uploaded['Algerian_forest_fires_dataset_UPDATE.csv']))\n","print(data.shape)\n","data.head()"],"metadata":{"colab":{"resources":{"http://localhost:8080/nbextensions/google.colab/files.js":{"data":"Ly8gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIExMQwovLwovLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsKLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLgovLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKLy8KLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKLy8KLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQovLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLAovLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4KLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZAovLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4KCi8qKgogKiBAZmlsZW92ZXJ2aWV3IEhlbHBlcnMgZm9yIGdvb2dsZS5jb2xhYiBQeXRob24gbW9kdWxlLgogKi8KKGZ1bmN0aW9uKHNjb3BlKSB7CmZ1bmN0aW9uIHNwYW4odGV4dCwgc3R5bGVBdHRyaWJ1dGVzID0ge30pIHsKICBjb25zdCBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpOwogIGVsZW1lbnQudGV4dENvbnRlbnQgPSB0ZXh0OwogIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKHN0eWxlQXR0cmlidXRlcykpIHsKICAgIGVsZW1lbnQuc3R5bGVba2V5XSA9IHN0eWxlQXR0cmlidXRlc1trZXldOwogIH0KICByZXR1cm4gZWxlbWVudDsKfQoKLy8gTWF4IG51bWJlciBvZiBieXRlcyB3aGljaCB3aWxsIGJlIHVwbG9hZGVkIGF0IGEgdGltZS4KY29uc3QgTUFYX1BBWUxPQURfU0laRSA9IDEwMCAqIDEwMjQ7CgpmdW5jdGlvbiBfdXBsb2FkRmlsZXMoaW5wdXRJZCwgb3V0cHV0SWQpIHsKICBjb25zdCBzdGVwcyA9IHVwbG9hZEZpbGVzU3RlcChpbnB1dElkLCBvdXRwdXRJZCk7CiAgY29uc3Qgb3V0cHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG91dHB1dElkKTsKICAvLyBDYWNoZSBzdGVwcyBvbiB0aGUgb3V0cHV0RWxlbWVudCB0byBtYWtlIGl0IGF2YWlsYWJsZSBmb3IgdGhlIG5leHQgY2FsbAogIC8vIHRvIHVwbG9hZEZpbGVzQ29udGludWUgZnJvbSBQeXRob24uCiAgb3V0cHV0RWxlbWVudC5zdGVwcyA9IHN0ZXBzOwoKICByZXR1cm4gX3VwbG9hZEZpbGVzQ29udGludWUob3V0cHV0SWQpOwp9CgovLyBUaGlzIGlzIHJvdWdobHkgYW4gYXN5bmMgZ2VuZXJhdG9yIChub3Qgc3VwcG9ydGVkIGluIHRoZSBicm93c2VyIHlldCksCi8vIHdoZXJlIHRoZXJlIGFyZSBtdWx0aXBsZSBhc3luY2hyb25vdXMgc3RlcHMgYW5kIHRoZSBQeXRob24gc2lkZSBpcyBnb2luZwovLyB0byBwb2xsIGZvciBjb21wbGV0aW9uIG9mIGVhY2ggc3RlcC4KLy8gVGhpcyB1c2VzIGEgUHJvbWlzZSB0byBibG9jayB0aGUgcHl0aG9uIHNpZGUgb24gY29tcGxldGlvbiBvZiBlYWNoIHN0ZXAsCi8vIHRoZW4gcGFzc2VzIHRoZSByZXN1bHQgb2YgdGhlIHByZXZpb3VzIHN0ZXAgYXMgdGhlIGlucHV0IHRvIHRoZSBuZXh0IHN0ZXAuCmZ1bmN0aW9uIF91cGxvYWRGaWxlc0NvbnRpbnVlKG91dHB1dElkKSB7CiAgY29uc3Qgb3V0cHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG91dHB1dElkKTsKICBjb25zdCBzdGVwcyA9IG91dHB1dEVsZW1lbnQuc3RlcHM7CgogIGNvbnN0IG5leHQgPSBzdGVwcy5uZXh0KG91dHB1dEVsZW1lbnQubGFzdFByb21pc2VWYWx1ZSk7CiAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShuZXh0LnZhbHVlLnByb21pc2UpLnRoZW4oKHZhbHVlKSA9PiB7CiAgICAvLyBDYWNoZSB0aGUgbGFzdCBwcm9taXNlIHZhbHVlIHRvIG1ha2UgaXQgYXZhaWxhYmxlIHRvIHRoZSBuZXh0CiAgICAvLyBzdGVwIG9mIHRoZSBnZW5lcmF0b3IuCiAgICBvdXRwdXRFbGVtZW50Lmxhc3RQcm9taXNlVmFsdWUgPSB2YWx1ZTsKICAgIHJldHVybiBuZXh0LnZhbHVlLnJlc3BvbnNlOwogIH0pOwp9CgovKioKICogR2VuZXJhdG9yIGZ1bmN0aW9uIHdoaWNoIGlzIGNhbGxlZCBiZXR3ZWVuIGVhY2ggYXN5bmMgc3RlcCBvZiB0aGUgdXBsb2FkCiAqIHByb2Nlc3MuCiAqIEBwYXJhbSB7c3RyaW5nfSBpbnB1dElkIEVsZW1lbnQgSUQgb2YgdGhlIGlucHV0IGZpbGUgcGlja2VyIGVsZW1lbnQuCiAqIEBwYXJhbSB7c3RyaW5nfSBvdXRwdXRJZCBFbGVtZW50IElEIG9mIHRoZSBvdXRwdXQgZGlzcGxheS4KICogQHJldHVybiB7IUl0ZXJhYmxlPCFPYmplY3Q+fSBJdGVyYWJsZSBvZiBuZXh0IHN0ZXBzLgogKi8KZnVuY3Rpb24qIHVwbG9hZEZpbGVzU3RlcChpbnB1dElkLCBvdXRwdXRJZCkgewogIGNvbnN0IGlucHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlucHV0SWQpOwogIGlucHV0RWxlbWVudC5kaXNhYmxlZCA9IGZhbHNlOwoKICBjb25zdCBvdXRwdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQob3V0cHV0SWQpOwogIG91dHB1dEVsZW1lbnQuaW5uZXJIVE1MID0gJyc7CgogIGNvbnN0IHBpY2tlZFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgaW5wdXRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIChlKSA9PiB7CiAgICAgIHJlc29sdmUoZS50YXJnZXQuZmlsZXMpOwogICAgfSk7CiAgfSk7CgogIGNvbnN0IGNhbmNlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpOwogIGlucHV0RWxlbWVudC5wYXJlbnRFbGVtZW50LmFwcGVuZENoaWxkKGNhbmNlbCk7CiAgY2FuY2VsLnRleHRDb250ZW50ID0gJ0NhbmNlbCB1cGxvYWQnOwogIGNvbnN0IGNhbmNlbFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgY2FuY2VsLm9uY2xpY2sgPSAoKSA9PiB7CiAgICAgIHJlc29sdmUobnVsbCk7CiAgICB9OwogIH0pOwoKICAvLyBXYWl0IGZvciB0aGUgdXNlciB0byBwaWNrIHRoZSBmaWxlcy4KICBjb25zdCBmaWxlcyA9IHlpZWxkIHsKICAgIHByb21pc2U6IFByb21pc2UucmFjZShbcGlja2VkUHJvbWlzZSwgY2FuY2VsUHJvbWlzZV0pLAogICAgcmVzcG9uc2U6IHsKICAgICAgYWN0aW9uOiAnc3RhcnRpbmcnLAogICAgfQogIH07CgogIGNhbmNlbC5yZW1vdmUoKTsKCiAgLy8gRGlzYWJsZSB0aGUgaW5wdXQgZWxlbWVudCBzaW5jZSBmdXJ0aGVyIHBpY2tzIGFyZSBub3QgYWxsb3dlZC4KICBpbnB1dEVsZW1lbnQuZGlzYWJsZWQgPSB0cnVlOwoKICBpZiAoIWZpbGVzKSB7CiAgICByZXR1cm4gewogICAgICByZXNwb25zZTogewogICAgICAgIGFjdGlvbjogJ2NvbXBsZXRlJywKICAgICAgfQogICAgfTsKICB9CgogIGZvciAoY29uc3QgZmlsZSBvZiBmaWxlcykgewogICAgY29uc3QgbGkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpOwogICAgbGkuYXBwZW5kKHNwYW4oZmlsZS5uYW1lLCB7Zm9udFdlaWdodDogJ2JvbGQnfSkpOwogICAgbGkuYXBwZW5kKHNwYW4oCiAgICAgICAgYCgke2ZpbGUudHlwZSB8fCAnbi9hJ30pIC0gJHtmaWxlLnNpemV9IGJ5dGVzLCBgICsKICAgICAgICBgbGFzdCBtb2RpZmllZDogJHsKICAgICAgICAgICAgZmlsZS5sYXN0TW9kaWZpZWREYXRlID8gZmlsZS5sYXN0TW9kaWZpZWREYXRlLnRvTG9jYWxlRGF0ZVN0cmluZygpIDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ24vYSd9IC0gYCkpOwogICAgY29uc3QgcGVyY2VudCA9IHNwYW4oJzAlIGRvbmUnKTsKICAgIGxpLmFwcGVuZENoaWxkKHBlcmNlbnQpOwoKICAgIG91dHB1dEVsZW1lbnQuYXBwZW5kQ2hpbGQobGkpOwoKICAgIGNvbnN0IGZpbGVEYXRhUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7CiAgICAgIGNvbnN0IHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7CiAgICAgIHJlYWRlci5vbmxvYWQgPSAoZSkgPT4gewogICAgICAgIHJlc29sdmUoZS50YXJnZXQucmVzdWx0KTsKICAgICAgfTsKICAgICAgcmVhZGVyLnJlYWRBc0FycmF5QnVmZmVyKGZpbGUpOwogICAgfSk7CiAgICAvLyBXYWl0IGZvciB0aGUgZGF0YSB0byBiZSByZWFkeS4KICAgIGxldCBmaWxlRGF0YSA9IHlpZWxkIHsKICAgICAgcHJvbWlzZTogZmlsZURhdGFQcm9taXNlLAogICAgICByZXNwb25zZTogewogICAgICAgIGFjdGlvbjogJ2NvbnRpbnVlJywKICAgICAgfQogICAgfTsKCiAgICAvLyBVc2UgYSBjaHVua2VkIHNlbmRpbmcgdG8gYXZvaWQgbWVzc2FnZSBzaXplIGxpbWl0cy4gU2VlIGIvNjIxMTU2NjAuCiAgICBsZXQgcG9zaXRpb24gPSAwOwogICAgZG8gewogICAgICBjb25zdCBsZW5ndGggPSBNYXRoLm1pbihmaWxlRGF0YS5ieXRlTGVuZ3RoIC0gcG9zaXRpb24sIE1BWF9QQVlMT0FEX1NJWkUpOwogICAgICBjb25zdCBjaHVuayA9IG5ldyBVaW50OEFycmF5KGZpbGVEYXRhLCBwb3NpdGlvbiwgbGVuZ3RoKTsKICAgICAgcG9zaXRpb24gKz0gbGVuZ3RoOwoKICAgICAgY29uc3QgYmFzZTY0ID0gYnRvYShTdHJpbmcuZnJvbUNoYXJDb2RlLmFwcGx5KG51bGwsIGNodW5rKSk7CiAgICAgIHlpZWxkIHsKICAgICAgICByZXNwb25zZTogewogICAgICAgICAgYWN0aW9uOiAnYXBwZW5kJywKICAgICAgICAgIGZpbGU6IGZpbGUubmFtZSwKICAgICAgICAgIGRhdGE6IGJhc2U2NCwKICAgICAgICB9LAogICAgICB9OwoKICAgICAgbGV0IHBlcmNlbnREb25lID0gZmlsZURhdGEuYnl0ZUxlbmd0aCA9PT0gMCA/CiAgICAgICAgICAxMDAgOgogICAgICAgICAgTWF0aC5yb3VuZCgocG9zaXRpb24gLyBmaWxlRGF0YS5ieXRlTGVuZ3RoKSAqIDEwMCk7CiAgICAgIHBlcmNlbnQudGV4dENvbnRlbnQgPSBgJHtwZXJjZW50RG9uZX0lIGRvbmVgOwoKICAgIH0gd2hpbGUgKHBvc2l0aW9uIDwgZmlsZURhdGEuYnl0ZUxlbmd0aCk7CiAgfQoKICAvLyBBbGwgZG9uZS4KICB5aWVsZCB7CiAgICByZXNwb25zZTogewogICAgICBhY3Rpb246ICdjb21wbGV0ZScsCiAgICB9CiAgfTsKfQoKc2NvcGUuZ29vZ2xlID0gc2NvcGUuZ29vZ2xlIHx8IHt9OwpzY29wZS5nb29nbGUuY29sYWIgPSBzY29wZS5nb29nbGUuY29sYWIgfHwge307CnNjb3BlLmdvb2dsZS5jb2xhYi5fZmlsZXMgPSB7CiAgX3VwbG9hZEZpbGVzLAogIF91cGxvYWRGaWxlc0NvbnRpbnVlLAp9Owp9KShzZWxmKTsK","ok":true,"headers":[["content-type","application/javascript"]],"status":200,"status_text":""}},"base_uri":"https://localhost:8080/","height":280},"id":"SlJrLHAWSndp","executionInfo":{"status":"ok","timestamp":1662831283133,"user_tz":-330,"elapsed":10760,"user":{"displayName":"Bhawna Bhoria (M22MA003)","userId":"18048709692470503716"}},"outputId":"d9df0245-e9f2-4f7e-9349-494d24901bd8"},"execution_count":42,"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","     <input type=\"file\" id=\"files-61c3939a-8034-42d8-adb1-4f1f1165ed51\" name=\"files[]\" multiple disabled\n","        style=\"border:none\" />\n","     <output id=\"result-61c3939a-8034-42d8-adb1-4f1f1165ed51\">\n","      Upload widget is only available when the cell has been executed in the\n","      current browser session. Please rerun this cell to enable.\n","      </output>\n","      <script src=\"/nbextensions/google.colab/files.js\"></script> "]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Saving Algerian_forest_fires_dataset_UPDATE.csv to Algerian_forest_fires_dataset_UPDATE (7).csv\n","(244, 14)\n"]},{"output_type":"execute_result","data":{"text/plain":["   day  month  year  Temperature   RH   Ws  Rain   FFMC  DMC    DC  ISI  BUI  \\\n","0    1      6  2012           29   57   18    0.0  65.7  3.4   7.6  1.3  3.4   \n","1    2      6  2012           29   61   13    1.3  64.4  4.1   7.6  1.0  3.9   \n","2    3      6  2012           26   82   22   13.1  47.1  2.5   7.1  0.3  2.7   \n","3    4      6  2012           25   89   13    2.5  28.6  1.3   6.9  0.0  1.7   \n","4    5      6  2012           27   77   16    0.0  64.8  3.0  14.2  1.2  3.9   \n","\n","   FWI    Classes    \n","0  0.5  not fire     \n","1  0.4  not fire     \n","2  0.1  not fire     \n","3    0  not fire     \n","4  0.5  not fire     "],"text/html":["\n","  <div id=\"df-7a4d7611-d0b2-4cba-a8d7-72f94c045dad\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>day</th>\n","      <th>month</th>\n","      <th>year</th>\n","      <th>Temperature</th>\n","      <th>RH</th>\n","      <th>Ws</th>\n","      <th>Rain</th>\n","      <th>FFMC</th>\n","      <th>DMC</th>\n","      <th>DC</th>\n","      <th>ISI</th>\n","      <th>BUI</th>\n","      <th>FWI</th>\n","      <th>Classes</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>6</td>\n","      <td>2012</td>\n","      <td>29</td>\n","      <td>57</td>\n","      <td>18</td>\n","      <td>0.0</td>\n","      <td>65.7</td>\n","      <td>3.4</td>\n","      <td>7.6</td>\n","      <td>1.3</td>\n","      <td>3.4</td>\n","      <td>0.5</td>\n","      <td>not fire</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>6</td>\n","      <td>2012</td>\n","      <td>29</td>\n","      <td>61</td>\n","      <td>13</td>\n","      <td>1.3</td>\n","      <td>64.4</td>\n","      <td>4.1</td>\n","      <td>7.6</td>\n","      <td>1.0</td>\n","      <td>3.9</td>\n","      <td>0.4</td>\n","      <td>not fire</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>6</td>\n","      <td>2012</td>\n","      <td>26</td>\n","      <td>82</td>\n","      <td>22</td>\n","      <td>13.1</td>\n","      <td>47.1</td>\n","      <td>2.5</td>\n","      <td>7.1</td>\n","      <td>0.3</td>\n","      <td>2.7</td>\n","      <td>0.1</td>\n","      <td>not fire</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>6</td>\n","      <td>2012</td>\n","      <td>25</td>\n","      <td>89</td>\n","      <td>13</td>\n","      <td>2.5</td>\n","      <td>28.6</td>\n","      <td>1.3</td>\n","      <td>6.9</td>\n","      <td>0.0</td>\n","      <td>1.7</td>\n","      <td>0</td>\n","      <td>not fire</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>6</td>\n","      <td>2012</td>\n","      <td>27</td>\n","      <td>77</td>\n","      <td>16</td>\n","      <td>0.0</td>\n","      <td>64.8</td>\n","      <td>3.0</td>\n","      <td>14.2</td>\n","      <td>1.2</td>\n","      <td>3.9</td>\n","      <td>0.5</td>\n","      <td>not fire</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7a4d7611-d0b2-4cba-a8d7-72f94c045dad')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-7a4d7611-d0b2-4cba-a8d7-72f94c045dad button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-7a4d7611-d0b2-4cba-a8d7-72f94c045dad');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":42}]},{"cell_type":"code","source":["x = np.linspace(-10, 10, 100)\n","y = 1/(1+np.exp(-x))\n","\n","plt.plot(x,y)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":320},"id":"P9Pt3nBpZmAM","executionInfo":{"status":"ok","timestamp":1662830986759,"user_tz":-330,"elapsed":563,"user":{"displayName":"Bhawna Bhoria (M22MA003)","userId":"18048709692470503716"}},"outputId":"7d5aefa3-2eaf-4923-8a4e-8195a5fd9d73"},"execution_count":37,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 720x360 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","execution_count":43,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"3ApiYqRnSYU3","executionInfo":{"status":"ok","timestamp":1662831296257,"user_tz":-330,"elapsed":464,"user":{"displayName":"Bhawna Bhoria (M22MA003)","userId":"18048709692470503716"}},"outputId":"02e5820a-371b-4467-cb4a-40a6b1077d4e"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["     day  month  year  Temperature   RH   Ws  Rain   FFMC   DMC    DC  ISI  \\\n","0      1      6  2012           29   57   18    0.0  65.7   3.4   7.6  1.3   \n","1      2      6  2012           29   61   13    1.3  64.4   4.1   7.6  1.0   \n","2      3      6  2012           26   82   22   13.1  47.1   2.5   7.1  0.3   \n","3      4      6  2012           25   89   13    2.5  28.6   1.3   6.9  0.0   \n","4      5      6  2012           27   77   16    0.0  64.8   3.0  14.2  1.2   \n","..   ...    ...   ...          ...  ...  ...    ...   ...   ...   ...  ...   \n","239   26      9  2012           30   65   14    0.0  85.4  16.0  44.5  4.5   \n","240   27      9  2012           28   87   15    4.4  41.1   6.5   8.0  0.1   \n","241   28      9  2012           27   87   29    0.5  45.9   3.5   7.9  0.4   \n","242   29      9  2012           24   54   18    0.1  79.7   4.3  15.2  1.7   \n","243   30      9  2012           24   64   15    0.2  67.3   3.8  16.5  1.2   \n","\n","      BUI  FWI  Classes    \n","0     3.4  0.5          0  \n","1     3.9  0.4          0  \n","2     2.7  0.1          0  \n","3     1.7    0          0  \n","4     3.9  0.5          0  \n","..    ...  ...        ...  \n","239  16.9  6.5          1  \n","240   6.2    0          0  \n","241   3.4  0.2          0  \n","242   5.1  0.7          0  \n","243   4.8  0.5          1  \n","\n","[244 rows x 14 columns]"],"text/html":["\n","  <div id=\"df-30653060-c0e9-43eb-aed0-c18983db06d5\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>day</th>\n","      <th>month</th>\n","      <th>year</th>\n","      <th>Temperature</th>\n","      <th>RH</th>\n","      <th>Ws</th>\n","      <th>Rain</th>\n","      <th>FFMC</th>\n","      <th>DMC</th>\n","      <th>DC</th>\n","      <th>ISI</th>\n","      <th>BUI</th>\n","      <th>FWI</th>\n","      <th>Classes</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>6</td>\n","      <td>2012</td>\n","      <td>29</td>\n","      <td>57</td>\n","      <td>18</td>\n","      <td>0.0</td>\n","      <td>65.7</td>\n","      <td>3.4</td>\n","      <td>7.6</td>\n","      <td>1.3</td>\n","      <td>3.4</td>\n","      <td>0.5</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>6</td>\n","      <td>2012</td>\n","      <td>29</td>\n","      <td>61</td>\n","      <td>13</td>\n","      <td>1.3</td>\n","      <td>64.4</td>\n","      <td>4.1</td>\n","      <td>7.6</td>\n","      <td>1.0</td>\n","      <td>3.9</td>\n","      <td>0.4</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>6</td>\n","      <td>2012</td>\n","      <td>26</td>\n","      <td>82</td>\n","      <td>22</td>\n","      <td>13.1</td>\n","      <td>47.1</td>\n","      <td>2.5</td>\n","      <td>7.1</td>\n","      <td>0.3</td>\n","      <td>2.7</td>\n","      <td>0.1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>6</td>\n","      <td>2012</td>\n","      <td>25</td>\n","      <td>89</td>\n","      <td>13</td>\n","      <td>2.5</td>\n","      <td>28.6</td>\n","      <td>1.3</td>\n","      <td>6.9</td>\n","      <td>0.0</td>\n","      <td>1.7</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>6</td>\n","      <td>2012</td>\n","      <td>27</td>\n","      <td>77</td>\n","      <td>16</td>\n","      <td>0.0</td>\n","      <td>64.8</td>\n","      <td>3.0</td>\n","      <td>14.2</td>\n","      <td>1.2</td>\n","      <td>3.9</td>\n","      <td>0.5</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>239</th>\n","      <td>26</td>\n","      <td>9</td>\n","      <td>2012</td>\n","      <td>30</td>\n","      <td>65</td>\n","      <td>14</td>\n","      <td>0.0</td>\n","      <td>85.4</td>\n","      <td>16.0</td>\n","      <td>44.5</td>\n","      <td>4.5</td>\n","      <td>16.9</td>\n","      <td>6.5</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>240</th>\n","      <td>27</td>\n","      <td>9</td>\n","      <td>2012</td>\n","      <td>28</td>\n","      <td>87</td>\n","      <td>15</td>\n","      <td>4.4</td>\n","      <td>41.1</td>\n","      <td>6.5</td>\n","      <td>8.0</td>\n","      <td>0.1</td>\n","      <td>6.2</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>241</th>\n","      <td>28</td>\n","      <td>9</td>\n","      <td>2012</td>\n","      <td>27</td>\n","      <td>87</td>\n","      <td>29</td>\n","      <td>0.5</td>\n","      <td>45.9</td>\n","      <td>3.5</td>\n","      <td>7.9</td>\n","      <td>0.4</td>\n","      <td>3.4</td>\n","      <td>0.2</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>242</th>\n","      <td>29</td>\n","      <td>9</td>\n","      <td>2012</td>\n","      <td>24</td>\n","      <td>54</td>\n","      <td>18</td>\n","      <td>0.1</td>\n","      <td>79.7</td>\n","      <td>4.3</td>\n","      <td>15.2</td>\n","      <td>1.7</td>\n","      <td>5.1</td>\n","      <td>0.7</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>243</th>\n","      <td>30</td>\n","      <td>9</td>\n","      <td>2012</td>\n","      <td>24</td>\n","      <td>64</td>\n","      <td>15</td>\n","      <td>0.2</td>\n","      <td>67.3</td>\n","      <td>3.8</td>\n","      <td>16.5</td>\n","      <td>1.2</td>\n","      <td>4.8</td>\n","      <td>0.5</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>244 rows × 14 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-30653060-c0e9-43eb-aed0-c18983db06d5')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-30653060-c0e9-43eb-aed0-c18983db06d5 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-30653060-c0e9-43eb-aed0-c18983db06d5');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":43}],"source":["classes = data['Classes  '].to_numpy()\n","c = []\n","for i in classes:\n","    if i == 'not fire   ':\n","      c.append(0)\n","    else:\n","        c.append(1)\n","data['Classes  '] = np.array(c)\n","# data\n","brb = data['DC'].to_numpy()\n","brb_float = []\n","for i in brb:\n","    s = \"\"\n","    for j in i:\n","        if j!=\" \":\n","            s+=j\n","    brb_float.append(float(s))\n","data['DC'] = np.array(brb_float)\n","data"]},{"cell_type":"code","source":["data_headers= []\n","for col in data:\n","    data_headers.append(col.strip())\n","data.columns = data_headers\n","fwi_data_temp = data['FWI'].to_numpy()\n","fwi_data = [] \n","for i in fwi_data_temp:\n","    try:\n","        fwi_data.append(float(i))\n","    except:\n","        print(i)\n","fwi_data_median = np.median(fwi_data)\n","for i in range(len(fwi_data_temp)):\n","    try:\n","        float(fwi_data_temp[i])\n","    except:\n","        fwi_data_temp[i] = fwi_data_median\n","data['FWI'] = fwi_data_temp\n","# data['FWI']"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"J6cJbM5XUNGt","executionInfo":{"status":"ok","timestamp":1662831316993,"user_tz":-330,"elapsed":427,"user":{"displayName":"Bhawna Bhoria (M22MA003)","userId":"18048709692470503716"}},"outputId":"51215c95-1f56-41f7-a086-2836205c2610"},"execution_count":44,"outputs":[{"output_type":"stream","name":"stdout","text":["fire   \n"]}]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","X = data[data_headers]\n","y = data['Classes']\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.40,random_state=16)\n","X_train,y_train"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"k5Zr9U7yUc6q","executionInfo":{"status":"ok","timestamp":1662831320421,"user_tz":-330,"elapsed":10,"user":{"displayName":"Bhawna Bhoria (M22MA003)","userId":"18048709692470503716"}},"outputId":"31d5ef64-3b2a-45cb-d210-fef11576ea14"},"execution_count":45,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(     day  month  year  Temperature  RH  Ws  Rain  FFMC   DMC    DC  ISI   BUI  \\\n"," 136   15      6  2012           28  90  15   0.0  66.8   7.2  14.7  1.2   7.1   \n"," 190    8      8  2012           37  56  11   0.0  87.4  11.2  20.2  5.2  11.0   \n"," 154    3      7  2012           34  56  17   0.1  84.7   9.7  27.3  4.7  10.3   \n"," 94     3      9  2012           25  78  15   3.8  42.6   1.2   7.5  0.1   1.7   \n"," 170   19      7  2012           34  58  16   0.0  88.1  27.8  61.1  7.3  27.7   \n"," ..   ...    ...   ...          ...  ..  ..   ...   ...   ...   ...  ...   ...   \n"," 65     5      8  2012           34  65  13   0.0  86.8  11.1  29.7  5.2  11.5   \n"," 69     9      8  2012           35  59  17   0.0  87.4  14.8  57.0  6.9  17.9   \n"," 121   30      9  2012           25  78  14   1.4  45.0   1.9   7.5  0.2   2.4   \n"," 238   25      9  2012           28  70  15   0.0  79.9  13.8  36.1  2.4  14.1   \n"," 169   18      7  2012           33  68  15   0.0  86.1  23.9  51.6  5.2  23.9   \n"," \n","      FWI  Classes  \n"," 136  0.6        0  \n"," 190  5.9        1  \n"," 154  5.2        1  \n"," 94     0        0  \n"," 170   13        1  \n"," ..   ...      ...  \n"," 65   6.1        1  \n"," 69   9.9        1  \n"," 121  0.1        1  \n"," 238    3        0  \n"," 169  9.1        1  \n"," \n"," [146 rows x 14 columns], 136    0\n"," 190    1\n"," 154    1\n"," 94     0\n"," 170    1\n","       ..\n"," 65     1\n"," 69     1\n"," 121    1\n"," 238    0\n"," 169    1\n"," Name: Classes, Length: 146, dtype: int64)"]},"metadata":{},"execution_count":45}]},{"cell_type":"code","source":["from sklearn.linear_model import LogisticRegression\n","logisticRegr = LogisticRegression(random_state=16,max_iter=1000)\n","logisticRegr.fit(X_train, y_train)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QNCWtX6aU11E","executionInfo":{"status":"ok","timestamp":1662831346811,"user_tz":-330,"elapsed":695,"user":{"displayName":"Bhawna Bhoria (M22MA003)","userId":"18048709692470503716"}},"outputId":"6e558199-6d09-4fa4-b3e7-151793fd33b3"},"execution_count":46,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LogisticRegression(max_iter=1000, random_state=16)"]},"metadata":{},"execution_count":46}]},{"cell_type":"code","source":["y_predicted = logisticRegr.predict(X_test)\n","y_predicted"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"v-4bVJHDWr-9","executionInfo":{"status":"ok","timestamp":1662831364117,"user_tz":-330,"elapsed":12,"user":{"displayName":"Bhawna Bhoria (M22MA003)","userId":"18048709692470503716"}},"outputId":"7143c808-450b-4d64-8f14-7c60d1af72f5"},"execution_count":47,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,\n","       0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0,\n","       0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1,\n","       0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1,\n","       1, 1, 0, 1, 0, 0, 1, 1, 1, 1])"]},"metadata":{},"execution_count":47}]},{"cell_type":"code","source":["from sklearn import metrics\n","\n","cnf_matrix = metrics.confusion_matrix(y_test, y_predicted)\n","cnf_matrix\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"E6NihJHGelu1","executionInfo":{"status":"ok","timestamp":1662831468641,"user_tz":-330,"elapsed":440,"user":{"displayName":"Bhawna Bhoria (M22MA003)","userId":"18048709692470503716"}},"outputId":"c55e8cd4-b2f6-494c-d654-86f6ab8c2dfa"},"execution_count":50,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[42,  1],\n","       [ 3, 52]])"]},"metadata":{},"execution_count":50}]},{"cell_type":"code","source":["from sklearn import metrics\n","y_predicted_prob = logisticRegr.predict_proba(X_test)[::,1]\n","fpr, tpr, _ = metrics.roc_curve(y_test,  y_predicted_prob)\n","auc = metrics.roc_auc_score(y_test, y_predicted_prob)\n","plt.plot(fpr,tpr,label=\"data 1, auc=\"+str(auc))\n","plt.legend(loc=4)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":320},"id":"VfpCmlBcZJgw","executionInfo":{"status":"ok","timestamp":1662831369681,"user_tz":-330,"elapsed":737,"user":{"displayName":"Bhawna Bhoria (M22MA003)","userId":"18048709692470503716"}},"outputId":"ca15316d-5a09-4686-f433-4f8e93e79401"},"execution_count":48,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 720x360 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":[],"metadata":{"id":"043P62nAWzUR","executionInfo":{"status":"ok","timestamp":1662830057244,"user_tz":-330,"elapsed":428,"user":{"displayName":"Bhawna Bhoria (M22MA003)","userId":"18048709692470503716"}}},"execution_count":16,"outputs":[]}]}